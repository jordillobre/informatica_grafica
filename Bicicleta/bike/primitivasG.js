// ---------------------------------------------------------------------------
// Primitivas geometricas basicas
// J. Ribelles, A. Lopez
// Mayo 2019
// ---------------------------------------------------------------------------

var examplePlane = {  // 4 vértices, 2 triángulos, 4 aristas

    "vertices" : [-0.5, 0.0, 0.5,
                   0.5, 0.0, 0.5,
                   0.5, 0.0,-0.5,
                  -0.5, 0.0,-0.5],

    // indices para gl.LINES
    "indices" : [0, 1, 1, 2, 2, 3, 3, 0]
    
//     // indices para gl.TRIANGLES
//     "indices" : [0, 1, 2, 0, 2, 3]

};
  
var exampleCube = {  // 8 vértices, 12 triángulos, 12 aristas
    
    "vertices" : [-0.5, -0.5,  0.5,
                   0.5, -0.5,  0.5,
                   0.5,  0.5,  0.5,
                  -0.5,  0.5,  0.5,
                  -0.5, -0.5, -0.5,
                   0.5, -0.5, -0.5,
                   0.5,  0.5, -0.5,
                  -0.5,  0.5, -0.5],

    // indices para gl.LINES
    "indices" : [ 0, 1, 1, 2, 2, 3, 3, 0,
                  1, 5, 5, 6, 6, 2,
                  6, 7, 7, 3,
                  0, 4, 5, 4, 7, 4]

     // indices para gl.TRIANGLES
//     "indices" : [ 0, 1, 2, 0, 2, 3, 
//                   1, 5, 6, 1, 6, 2,
//                   3, 2, 6, 3, 6, 7,
//                   5, 4, 7, 5, 7, 6,
//                   4, 0, 3, 4, 3, 7,
//                   4, 5, 1, 4, 1, 0]

};

var exampleCover = {  // 13 vértices, 12 triángulos, 24 aristas

    "vertices" : [ 1,  0, 0,  0.866,  0.5,   0,  0.5,    0.866, 0, 
                   0,  1, 0, -0.5,    0.866, 0, -0.86,   0.5,   0, 
                  -1,  0, 0, -0.866, -0.5,   0, -0.5,   -0.866, 0, 
                   0, -1, 0,  0.5,   -0.866, 0,  0.866, -0.5,   0, 
                   0,  0, 0],
                     
    // indices para gl.LINES
    "indices" : [ 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 0, 
                  0, 12, 1, 12, 2, 12, 3, 12, 4, 12, 5, 12, 6, 12, 7, 12, 8, 12, 9, 12, 10, 12, 11, 12]

//     // indices para gl.TRIANGLES
//     "indices" : [ 0, 1, 12, 1, 2, 12, 2, 3, 12, 3,  4, 12,  4,  5, 12,  5, 6, 12,  
//                   6, 7, 12, 7, 8, 12, 8, 9, 12, 9, 10, 12, 10, 11, 12, 11, 0, 12]
  
};

var exampleCone = {  // 13 vértices, 12 triángulos, 24 aristas

    "vertices" : [ 1,  0, 0,  0.866,  0.5,   0,  0.5,    0.866, 0, 
                   0,  1, 0, -0.5,    0.866, 0, -0.86,   0.5,   0, 
                  -1,  0, 0, -0.866, -0.5,   0, -0.5,   -0.866, 0, 
                   0, -1, 0,  0.5,   -0.866, 0,  0.866, -0.5,   0, 
                   0,  0, 1],
                     
    // indices para gl.LINES
    "indices" : [ 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 0, 
                  0, 12, 1, 12, 2, 12, 3, 12, 4, 12, 5, 12, 6, 12, 7, 12, 8, 12, 9, 12, 10, 12, 11, 12]

//     // indices para gl.TRIANGLES
//     "indices" : [ 0, 1, 12, 1, 2, 12, 2, 3, 12, 3,  4, 12,  4,  5, 12,  5, 6, 12,  
//                   6, 7, 12, 7, 8, 12, 8, 9, 12, 9, 10, 12, 10, 11, 12, 11, 0, 12]
  
};
                    
var exampleCylinder = {  // 24 vértices, 24 triángulos, 36 aristas

    "vertices" : [ 1,  0, 0,  0.866,  0.5,   0,  0.5,    0.866, 0, 
                   0,  1, 0, -0.5,    0.866, 0, -0.86,   0.5,   0, 
                  -1,  0, 0, -0.866, -0.5,   0, -0.5,   -0.866, 0, 
                   0, -1, 0,  0.5,   -0.866, 0,  0.866, -0.5,   0,
                   1,  0, 1,  0.866,  0.5,   1,  0.5,    0.866, 1, 
                   0,  1, 1, -0.5,    0.866, 1, -0.86,   0.5,   1, 
                  -1,  0, 1, -0.866, -0.5,   1, -0.5,   -0.866, 1, 
                   0, -1, 1,  0.5,   -0.866, 1,  0.866, -0.5,   1],
    
    // indices para gl.LINES
    "indices" : [ 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 0, 
                  12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 12,
                  0, 12, 1, 13, 2, 14, 3, 15, 4, 16, 5, 17, 6, 18, 7, 19, 8, 20, 9, 21, 10, 22, 11, 23]

//     // indices para gl.TRIANGLES
//     "indices" : [ 0,  1, 12, 1,  2, 13, 2,  3, 14,  3,  4, 15,  4,  5, 16,  5,  6, 17,  
//                   6,  7, 18, 7,  8, 19, 8,  9, 20,  9, 10, 21, 10, 11, 22, 11,  0, 23,
//                   1, 13, 12, 2, 14, 13, 3, 15, 14,  4, 16, 15,  5, 17, 16,  6, 18, 17,
//                   7, 19, 18, 8, 20, 19, 9, 21, 20, 10, 22, 21, 11, 23, 22,  0, 12, 23]
                  
};
           
var exampleSphere = {  // 42 vértices, 80 triángulos, 120 aristas

    "vertices" : [ 0.000000, 0.850651, 0.525731,
                  -0.309017, 0.500000, 0.809017,
                   0.309017, 0.500000, 0.809017,
                  -0.525731, 0.000000, 0.850651,
                   0.000000, 0.000000, 1.000000,
                   0.525731, 0.000000, 0.850651,
                  -0.850651, 0.525731, 0.000000,
                  -0.809017, 0.309017, 0.500000,
                  -0.500000, 0.809017, 0.309017,
                   0.000000, 0.850651,-0.525731,
                  -0.500000, 0.809017,-0.309017,
                   0.000000, 1.000000, 0.000000,
                   0.500000, 0.809017,-0.309017,
                   0.500000, 0.809017, 0.309017,
                   0.850651, 0.525731, 0.000000,
                   0.809017, 0.309017, 0.500000,
                   0.850651,-0.525731, 0.000000,
                   1.000000, 0.000000, 0.000000,
                   0.809017,-0.309017, 0.500000,
                   0.525731, 0.000000,-0.850651,
                   0.809017, 0.309017,-0.500000,
                   0.809017,-0.309017,-0.500000,
                   0.309017, 0.500000,-0.809017,
                  -0.525731, 0.000000,-0.850651,
                  -0.309017, 0.500000,-0.809017,
                   0.000000, 0.000000,-1.000000,
                   0.000000,-0.850651,-0.525731,
                  -0.309017,-0.500000,-0.809017,
                   0.309017,-0.500000,-0.809017,
                   0.500000,-0.809017,-0.309017,
                   0.000000,-0.850651, 0.525731,
                   0.000000,-1.000000, 0.000000,
                   0.500000,-0.809017, 0.309017,
                  -0.850651,-0.525731, 0.000000,
                  -0.500000,-0.809017,-0.309017,
                  -0.500000,-0.809017, 0.309017,
                  -0.809017,-0.309017, 0.500000,
                  -0.309017,-0.500000, 0.809017,
                   0.309017,-0.500000, 0.809017,
                  -1.000000, 0.000000, 0.000000,
                  -0.809017,-0.309017,-0.500000,
                  -0.809017, 0.309017,-0.500000],

    // indices para gl.LINES
    "indices" : [ 0, 1, 0, 2, 0, 8, 0, 11, 0, 13, 1, 2, 1, 3, 1, 4, 1, 7, 1, 8, 
                  2, 4, 2, 5, 2, 13, 2, 15, 3, 4, 3, 7, 3, 36, 3, 37,
                  4, 5, 4, 37, 4, 38, 5, 15, 5, 18, 5, 38,
                  6, 7, 6, 8, 6, 10, 6, 39, 6, 41, 7, 8, 7, 36, 7, 39,
                  8, 10, 8, 11, 9, 10, 9, 11, 9, 12, 9, 22, 9, 24,
                  10, 11, 10, 24, 10, 41, 11, 12, 11, 13, 
                  12, 13, 12, 14, 12, 22, 12, 20, 12, 22, 
                  13, 14, 13, 15, 14, 15, 14, 17, 14, 20,
                  15, 17, 15, 18, 16, 17, 16, 18, 16, 21, 16, 29, 16, 32,
                  17, 18, 17, 20, 17, 21, 18, 32, 18, 38,
                  19, 20, 19, 21, 19, 22, 19, 25, 19, 28,
                  20, 21, 20, 22, 21, 28, 21, 29,
                  22, 24, 22, 25, 23, 24, 23, 25, 23, 27, 23, 40, 23, 41,
                  24, 25, 24, 41, 25, 27, 25, 28,
                  26, 27, 26, 28, 26, 29, 26, 31, 26, 34,
                  27, 28, 27, 34, 27, 40, 28, 29,
                  29, 31, 29, 32, 30, 31, 30, 32, 30, 35, 30, 37, 30, 38,
                  31, 32, 31, 34, 31, 35, 32, 38,
                  33, 34, 33, 35, 33, 36, 33, 39, 33, 40, 
                  34, 35, 34, 40, 35, 36, 35, 37, 36, 37, 36, 39, 37, 38,
                  39, 40, 39, 41, 40, 41]
                  
     // indices para gl.TRIANGLES
//     "indices" : [ 1, 2, 0, 4, 1, 3, 2, 4, 5, 4, 2, 1, 7, 8, 6, 1, 7, 3, 8, 1, 0, 1, 8, 7,10,11, 9, 8,10, 6,
//                  11, 8, 0, 8,11,10,11,12, 9,13,11, 0,12,13,14,13,12,11,13,15,14, 2,13, 0,15, 2, 5, 2,15,13,
//                  17,18,16,15,17,14,18,15, 5,15,18,17,20,21,19,17,20,14,21,17,16,17,21,20,22,20,19,12,22, 9,
//                  20,12,14,12,20,22,24,25,23,22,24, 9,25,22,19,22,25,24,27,28,26,25,27,23,28,25,19,25,28,27,
//                  29,21,16,28,29,26,21,28,19,28,21,29,31,32,30,29,31,26,32,29,16,29,32,31,34,35,33,31,34,26,
//                  35,31,30,31,35,34,36,37, 3,35,36,33,37,35,30,35,37,36, 4,38, 5,37, 4, 3,38,37,30,37,38, 4,
//                  38,18, 5,32,38,30,18,32,16,32,18,38, 7,36, 3,39, 7, 6,36,39,33,39,36, 7,39,40,33,41,39, 6,
//                  40,41,23,41,40,39,41,24,23,10,41, 6,24,10, 9,10,24,41,27,40,23,34,27,26,40,34,33,34,40,27]

};

function makeTorus (innerRadius, outerRadius, nSides, nRings) {
        
  var torus = {
      "vertices" : [],
      "indices"  : []
  };
  
  if (nSides < 3 ) nSides = 3;
  if (nRings < 3 ) nRings = 3;
        
  var dpsi =  2.0 * Math.PI / nRings ;
  var dphi = -2.0 * Math.PI / nSides ;
  var psi  =  0.0;
  
  for (var j = 0; j < nRings; j++) {
    
    var cpsi = Math.cos ( psi ) ;
    var spsi = Math.sin ( psi ) ;
    var phi  = 0.0;

    for (var i = 0; i < nSides; i++) {
      
      var offset = 3 * ( j * nSides + i ) ;
      var cphi   = Math.cos ( phi ) ;
      var sphi   = Math.sin ( phi ) ;
      
      torus.vertices[offset + 0] = cpsi * ( outerRadius + cphi * innerRadius ) ;
      torus.vertices[offset + 1] = spsi * ( outerRadius + cphi * innerRadius ) ;
      torus.vertices[offset + 2] =                        sphi * innerRadius   ;
      
      phi += dphi;
      
    }

    psi += dpsi;
    
  }

  var max = nSides * nRings;
  
  for (var j = 0; j < nRings; j++){
    
    var desp = j * nSides;

    for (var i = 0; i < nSides; i++){
      
      var v0 = desp + i;
      var v1 = desp + ((i + 1) % nSides);
      var v2 = (desp + (i + 1) % nSides + nSides) % max;
      var v3 = (desp + i + nSides) % max;
      
      // indices para gl.LINES
      torus.indices.push(v0, v1); 
      torus.indices.push(v0, v3); 

//       // indices para gl.TRIANGLES
//       torus.indices.push(v0, v1, v3); 
//       torus.indices.push(v1, v2, v3);

    }
    
  }

  return torus; 
  
}
